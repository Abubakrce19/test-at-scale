name: Go report card & Test coverage

on:
  push:
    branches:
      - master

      
  pull_request:
    branches:
      - master

jobs:
  Unit_Test_Cases:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Unit Test Cases
        env:
          ENV: "dev"
        run: go test ./... -parallel 4

  Performance_Test_Cases:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Performance Test Cases
        env:
          ENV: "dev"
        run: go test ./... -parallel 4 -bench=. -benchmem

  Test_Coverage:
    runs-on: ubuntu-latest
    needs: [ Unit_Test_Cases, Performance_Test_Cases ]
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test Code Coverage
        env:
          ENV: "dev"
        run: |
          go test -parallel 4 -coverpkg=./... -coverprofile=profile.cov ./...
          go tool cover -func profile.cov
  Go_Report_Card:
    runs-on: ubuntu-latest
    needs: [ Unit_Test_Cases, Performance_Test_Cases ]
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Go Report Card
        run: |
          git clone https://github.com/gojp/goreportcard.git
          cd goreportcard
          make install
          go install ./cmd/goreportcard-cli
          cd ..
          rm -rf goreportcard
          goreportcard-cli | tee reportcard.txt
          files=$(cat reportcard.txt| grep 'Files:' | awk  '{print $2}' | tr -d \%)
          issues=$(cat reportcard.txt| grep 'Issues:' | awk  '{print $2}' | tr -d \%)
          gofmt_score=$(cat reportcard.txt| grep 'gofmt:' | awk  '{print $2}' | tr -d \%)
          go_vet_score=$(cat reportcard.txt| grep 'go_vet:' | awk  '{print $2}' | tr -d \%)
          golint_score=$(cat reportcard.txt| grep 'golint:' | awk  '{print $2}' | tr -d \%)
          gocyclo_score=$(cat reportcard.txt| grep 'gocyclo:' | awk  '{print $2}' | tr -d \%)
          rm reportcard.txt
          if [[ \
            $issues -gt 17 || \
            $gofmt_score -lt 100 || \
            $go_vet_score -lt 100 || \
            $golint_score -lt 80 || \
            $gocyclo_score -lt 86 ]] \
              ; then
            echo "Your code introduced $(($issues - 17)) new issues"
            echo "gofmt_score: $gofmt_score%"
            echo "go_vet_score: $go_vet_score%"
            echo "golint_score: $golint_score%"
            echo "gocyclo_score: $gocyclo_score%"
            exit 1
          else
            exit 0
          fi
